{"ast":null,"code":"var _jsxFileName = \"/Users/subhashpatel/vote/voting-system-1/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport './App.css';\n\n// Import your contract ABI and address\nimport VotingSystemData from './contracts/MultiSessionVotingSystem.json';\n\n// Components\nimport OwnerPortal from './components/OwnerPortal';\nimport VoterPortal from './components/VoterPortal';\nimport Login from './components/Login';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [provider, setProvider] = useState(null);\n  const [signer, setSigner] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [account, setAccount] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [userRole, setUserRole] = useState(''); // 'owner' or 'voter' or ''\n  const [isConnected, setIsConnected] = useState(false);\n  useEffect(() => {\n    checkConnection();\n  }, []);\n  const checkConnection = async () => {\n    try {\n      if (typeof window.ethereum !== 'undefined') {\n        const provider = new ethers.BrowserProvider(window.ethereum);\n        const accounts = await provider.listAccounts();\n        if (accounts.length > 0) {\n          await connectWallet();\n        }\n      }\n    } catch (error) {\n      console.error('Error checking connection:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const connectWallet = async () => {\n    try {\n      setLoading(true);\n      setError('');\n      if (typeof window.ethereum === 'undefined') {\n        setError('Please install MetaMask to use this application');\n        return;\n      }\n\n      // Request account access\n      await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner();\n      const address = await signer.getAddress();\n\n      // Check network\n      const network = await provider.getNetwork();\n      if (network.chainId !== 1337n) {\n        setError('Please connect to Ganache network (Chain ID: 1337)');\n        return;\n      }\n      setProvider(provider);\n      setSigner(signer);\n      setAccount(address);\n      setIsConnected(true);\n\n      // Initialize contract\n      const votingContract = new ethers.Contract(VotingSystemData.address, VotingSystemData.abi, signer);\n      setContract(votingContract);\n\n      // Determine user role\n      const owner = await votingContract.owner();\n      const role = address.toLowerCase() === owner.toLowerCase() ? 'owner' : 'voter';\n      setUserRole(role);\n\n      // Setup event listeners\n      setupEventListeners(votingContract);\n    } catch (error) {\n      console.error('Connection error:', error);\n      setError(`Error connecting: ${error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const setupEventListeners = contractInstance => {\n    // Listen for account changes\n    window.ethereum.on('accountsChanged', accounts => {\n      if (accounts.length === 0) {\n        disconnectWallet();\n      } else {\n        connectWallet();\n      }\n    });\n\n    // Listen for network changes\n    window.ethereum.on('chainChanged', chainId => {\n      if (chainId !== '0x539') {\n        // 1337 in hex\n        setError('Please connect to Ganache network (Chain ID: 1337)');\n      } else {\n        setError('');\n      }\n    });\n  };\n  const disconnectWallet = () => {\n    setProvider(null);\n    setSigner(null);\n    setContract(null);\n    setAccount('');\n    setUserRole('');\n    setIsConnected(false);\n    setError('');\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Loading Voting System...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Connecting to blockchain...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u26A0\\uFE0F Connection Error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: connectWallet,\n          className: \"btn btn-primary\",\n          children: \"\\uD83D\\uDD04 Try Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this);\n  }\n  if (!isConnected || !userRole) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: /*#__PURE__*/_jsxDEV(Login, {\n        onConnect: connectWallet\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: userRole === 'owner' ? /*#__PURE__*/_jsxDEV(OwnerPortal, {\n      contract: contract,\n      account: account,\n      onDisconnect: disconnectWallet\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(VoterPortal, {\n      contract: contract,\n      account: account,\n      onDisconnect: disconnectWallet\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"vimVBXD0fV29I9zf7g7Mp7LpOnc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ethers","VotingSystemData","OwnerPortal","VoterPortal","Login","jsxDEV","_jsxDEV","App","_s","provider","setProvider","signer","setSigner","contract","setContract","account","setAccount","loading","setLoading","error","setError","userRole","setUserRole","isConnected","setIsConnected","checkConnection","window","ethereum","BrowserProvider","accounts","listAccounts","length","connectWallet","console","request","method","getSigner","address","getAddress","network","getNetwork","chainId","votingContract","Contract","abi","owner","role","toLowerCase","setupEventListeners","message","contractInstance","on","disconnectWallet","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onConnect","onDisconnect","_c","$RefreshReg$"],"sources":["/Users/subhashpatel/vote/voting-system-1/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport './App.css';\n\n// Import your contract ABI and address\nimport VotingSystemData from './contracts/MultiSessionVotingSystem.json';\n\n// Components\nimport OwnerPortal from './components/OwnerPortal';\nimport VoterPortal from './components/VoterPortal';\nimport Login from './components/Login';\n\nfunction App() {\n  const [provider, setProvider] = useState(null);\n  const [signer, setSigner] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [account, setAccount] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [userRole, setUserRole] = useState(''); // 'owner' or 'voter' or ''\n  const [isConnected, setIsConnected] = useState(false);\n\n  useEffect(() => {\n    checkConnection();\n  }, []);\n\n  const checkConnection = async () => {\n    try {\n      if (typeof window.ethereum !== 'undefined') {\n        const provider = new ethers.BrowserProvider(window.ethereum);\n        const accounts = await provider.listAccounts();\n        \n        if (accounts.length > 0) {\n          await connectWallet();\n        }\n      }\n    } catch (error) {\n      console.error('Error checking connection:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const connectWallet = async () => {\n    try {\n      setLoading(true);\n      setError('');\n\n      if (typeof window.ethereum === 'undefined') {\n        setError('Please install MetaMask to use this application');\n        return;\n      }\n\n      // Request account access\n      await window.ethereum.request({ method: 'eth_requestAccounts' });\n      \n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner();\n      const address = await signer.getAddress();\n\n      // Check network\n      const network = await provider.getNetwork();\n      if (network.chainId !== 1337n) {\n        setError('Please connect to Ganache network (Chain ID: 1337)');\n        return;\n      }\n\n      setProvider(provider);\n      setSigner(signer);\n      setAccount(address);\n      setIsConnected(true);\n\n      // Initialize contract\n      const votingContract = new ethers.Contract(\n        VotingSystemData.address,\n        VotingSystemData.abi,\n        signer\n      );\n\n      setContract(votingContract);\n\n      // Determine user role\n      const owner = await votingContract.owner();\n      const role = address.toLowerCase() === owner.toLowerCase() ? 'owner' : 'voter';\n      setUserRole(role);\n\n      // Setup event listeners\n      setupEventListeners(votingContract);\n\n    } catch (error) {\n      console.error('Connection error:', error);\n      setError(`Error connecting: ${error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const setupEventListeners = (contractInstance) => {\n    // Listen for account changes\n    window.ethereum.on('accountsChanged', (accounts) => {\n      if (accounts.length === 0) {\n        disconnectWallet();\n      } else {\n        connectWallet();\n      }\n    });\n\n    // Listen for network changes\n    window.ethereum.on('chainChanged', (chainId) => {\n      if (chainId !== '0x539') { // 1337 in hex\n        setError('Please connect to Ganache network (Chain ID: 1337)');\n      } else {\n        setError('');\n      }\n    });\n  };\n\n  const disconnectWallet = () => {\n    setProvider(null);\n    setSigner(null);\n    setContract(null);\n    setAccount('');\n    setUserRole('');\n    setIsConnected(false);\n    setError('');\n  };\n\n  if (loading) {\n    return (\n      <div className=\"app\">\n        <div className=\"loading-container\">\n          <div className=\"loading-spinner\"></div>\n          <h2>Loading Voting System...</h2>\n          <p>Connecting to blockchain...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"app\">\n        <div className=\"error-container\">\n          <h2>⚠️ Connection Error</h2>\n          <p>{error}</p>\n          <button onClick={connectWallet} className=\"btn btn-primary\">\n            🔄 Try Again\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  if (!isConnected || !userRole) {\n    return (\n      <div className=\"app\">\n        <Login onConnect={connectWallet} />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"app\">\n      {userRole === 'owner' ? (\n        <OwnerPortal \n          contract={contract}\n          account={account}\n          onDisconnect={disconnectWallet}\n        />\n      ) : (\n        <VoterPortal \n          contract={contract}\n          account={account}\n          onDisconnect={disconnectWallet}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}