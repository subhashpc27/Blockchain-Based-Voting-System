{"ast":null,"code":"var _jsxFileName = \"/Users/subhashpatel/vote/voting-system-1/src/components/OwnerPortal.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction VotingResults({\n  contract,\n  sessions\n}) {\n  _s();\n  const [results, setResults] = useState({});\n  const [loadingSessions, setLoadingSessions] = useState({});\n  useEffect(() => {\n    const fetchResults = async () => {\n      const resultsData = {};\n      for (const session of sessions) {\n        // Only fetch results for inactive sessions\n        if (!session.isActive) {\n          setLoadingSessions(prev => ({\n            ...prev,\n            [session.id]: true\n          }));\n          try {\n            const candidates = await contract.getCandidates(session.id);\n            const votes = await Promise.all(candidates.map((_, index) => contract.getVoteCount(session.id, index)));\n            const sessionResults = candidates.map((candidate, index) => ({\n              name: candidate,\n              votes: votes[index].toNumber()\n            }));\n            resultsData[session.id] = sessionResults;\n          } catch (error) {\n            console.error(`Failed to fetch results for session ${session.id}:`, error);\n          } finally {\n            setLoadingSessions(prev => ({\n              ...prev,\n              [session.id]: false\n            }));\n          }\n        }\n      }\n      setResults(resultsData);\n    };\n    if (contract && sessions.length > 0) {\n      fetchResults();\n    }\n  }, [contract, sessions]);\n\n  // Only show inactive sessions\n  const completedSessions = sessions.filter(session => !session.isActive);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold mb-4\",\n      children: \"Completed Session Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), completedSessions.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-gray-500\",\n      children: \"No completed sessions found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this) : completedSessions.map(session => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6 p-4 border rounded shadow-md bg-white\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold mb-2\",\n        children: [\"Session #\", session.id, \" - \", session.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), loadingSessions[session.id] ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-blue-500\",\n        children: \"Loading results...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 15\n      }, this) : results[session.id] && results[session.id].length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"w-full text-left table-auto border-collapse\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"border px-4 py-2\",\n              children: \"Candidate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"border px-4 py-2\",\n              children: \"Votes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: results[session.id].map((candidate, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"border px-4 py-2\",\n              children: candidate.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"border px-4 py-2\",\n              children: candidate.votes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 23\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500\",\n        children: \"No result data found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }, this)]\n    }, session.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(VotingResults, \"mSBBrbDXml8/ewxXoIp5ISUBX9M=\");\n_c = VotingResults;\nexport default VotingResults;\nvar _c;\n$RefreshReg$(_c, \"VotingResults\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","VotingResults","contract","sessions","_s","results","setResults","loadingSessions","setLoadingSessions","fetchResults","resultsData","session","isActive","prev","id","candidates","getCandidates","votes","Promise","all","map","_","index","getVoteCount","sessionResults","candidate","name","toNumber","error","console","length","completedSessions","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/subhashpatel/vote/voting-system-1/src/components/OwnerPortal.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nfunction VotingResults({ contract, sessions }) {\n  const [results, setResults] = useState({});\n  const [loadingSessions, setLoadingSessions] = useState({});\n\n  useEffect(() => {\n    const fetchResults = async () => {\n      const resultsData = {};\n\n      for (const session of sessions) {\n        // Only fetch results for inactive sessions\n        if (!session.isActive) {\n          setLoadingSessions((prev) => ({ ...prev, [session.id]: true }));\n\n          try {\n            const candidates = await contract.getCandidates(session.id);\n            const votes = await Promise.all(\n              candidates.map((_, index) =>\n                contract.getVoteCount(session.id, index)\n              )\n            );\n\n            const sessionResults = candidates.map((candidate, index) => ({\n              name: candidate,\n              votes: votes[index].toNumber(),\n            }));\n\n            resultsData[session.id] = sessionResults;\n          } catch (error) {\n            console.error(`Failed to fetch results for session ${session.id}:`, error);\n          } finally {\n            setLoadingSessions((prev) => ({ ...prev, [session.id]: false }));\n          }\n        }\n      }\n\n      setResults(resultsData);\n    };\n\n    if (contract && sessions.length > 0) {\n      fetchResults();\n    }\n  }, [contract, sessions]);\n\n  // Only show inactive sessions\n  const completedSessions = sessions.filter((session) => !session.isActive);\n\n  return (\n    <div className=\"p-4\">\n      <h2 className=\"text-xl font-bold mb-4\">Completed Session Results</h2>\n\n      {completedSessions.length === 0 ? (\n        <p className=\"text-gray-500\">No completed sessions found.</p>\n      ) : (\n        completedSessions.map((session) => (\n          <div\n            key={session.id}\n            className=\"mb-6 p-4 border rounded shadow-md bg-white\"\n          >\n            <h3 className=\"text-lg font-semibold mb-2\">\n              Session #{session.id} - {session.name}\n            </h3>\n\n            {loadingSessions[session.id] ? (\n              <p className=\"text-blue-500\">Loading results...</p>\n            ) : results[session.id] && results[session.id].length > 0 ? (\n              <table className=\"w-full text-left table-auto border-collapse\">\n                <thead>\n                  <tr>\n                    <th className=\"border px-4 py-2\">Candidate</th>\n                    <th className=\"border px-4 py-2\">Votes</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {results[session.id].map((candidate, index) => (\n                    <tr key={index}>\n                      <td className=\"border px-4 py-2\">{candidate.name}</td>\n                      <td className=\"border px-4 py-2\">{candidate.votes}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            ) : (\n              <p className=\"text-red-500\">No result data found.</p>\n            )}\n          </div>\n        ))\n      )}\n    </div>\n  );\n}\n\nexport default VotingResults;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,aAAaA,CAAC;EAAEC,QAAQ;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC7C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC1C,MAAM,CAACS,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE1DD,SAAS,CAAC,MAAM;IACd,MAAMY,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,MAAMC,WAAW,GAAG,CAAC,CAAC;MAEtB,KAAK,MAAMC,OAAO,IAAIR,QAAQ,EAAE;QAC9B;QACA,IAAI,CAACQ,OAAO,CAACC,QAAQ,EAAE;UACrBJ,kBAAkB,CAAEK,IAAI,KAAM;YAAE,GAAGA,IAAI;YAAE,CAACF,OAAO,CAACG,EAAE,GAAG;UAAK,CAAC,CAAC,CAAC;UAE/D,IAAI;YACF,MAAMC,UAAU,GAAG,MAAMb,QAAQ,CAACc,aAAa,CAACL,OAAO,CAACG,EAAE,CAAC;YAC3D,MAAMG,KAAK,GAAG,MAAMC,OAAO,CAACC,GAAG,CAC7BJ,UAAU,CAACK,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK,KACtBpB,QAAQ,CAACqB,YAAY,CAACZ,OAAO,CAACG,EAAE,EAAEQ,KAAK,CACzC,CACF,CAAC;YAED,MAAME,cAAc,GAAGT,UAAU,CAACK,GAAG,CAAC,CAACK,SAAS,EAAEH,KAAK,MAAM;cAC3DI,IAAI,EAAED,SAAS;cACfR,KAAK,EAAEA,KAAK,CAACK,KAAK,CAAC,CAACK,QAAQ,CAAC;YAC/B,CAAC,CAAC,CAAC;YAEHjB,WAAW,CAACC,OAAO,CAACG,EAAE,CAAC,GAAGU,cAAc;UAC1C,CAAC,CAAC,OAAOI,KAAK,EAAE;YACdC,OAAO,CAACD,KAAK,CAAC,uCAAuCjB,OAAO,CAACG,EAAE,GAAG,EAAEc,KAAK,CAAC;UAC5E,CAAC,SAAS;YACRpB,kBAAkB,CAAEK,IAAI,KAAM;cAAE,GAAGA,IAAI;cAAE,CAACF,OAAO,CAACG,EAAE,GAAG;YAAM,CAAC,CAAC,CAAC;UAClE;QACF;MACF;MAEAR,UAAU,CAACI,WAAW,CAAC;IACzB,CAAC;IAED,IAAIR,QAAQ,IAAIC,QAAQ,CAAC2B,MAAM,GAAG,CAAC,EAAE;MACnCrB,YAAY,CAAC,CAAC;IAChB;EACF,CAAC,EAAE,CAACP,QAAQ,EAAEC,QAAQ,CAAC,CAAC;;EAExB;EACA,MAAM4B,iBAAiB,GAAG5B,QAAQ,CAAC6B,MAAM,CAAErB,OAAO,IAAK,CAACA,OAAO,CAACC,QAAQ,CAAC;EAEzE,oBACEZ,OAAA;IAAKiC,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBlC,OAAA;MAAIiC,SAAS,EAAC,wBAAwB;MAAAC,QAAA,EAAC;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAEpEP,iBAAiB,CAACD,MAAM,KAAK,CAAC,gBAC7B9B,OAAA;MAAGiC,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAC;IAA4B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GAE7DP,iBAAiB,CAACX,GAAG,CAAET,OAAO,iBAC5BX,OAAA;MAEEiC,SAAS,EAAC,4CAA4C;MAAAC,QAAA,gBAEtDlC,OAAA;QAAIiC,SAAS,EAAC,4BAA4B;QAAAC,QAAA,GAAC,WAChC,EAACvB,OAAO,CAACG,EAAE,EAAC,KAAG,EAACH,OAAO,CAACe,IAAI;MAAA;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CAAC,EAEJ/B,eAAe,CAACI,OAAO,CAACG,EAAE,CAAC,gBAC1Bd,OAAA;QAAGiC,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAC;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,GACjDjC,OAAO,CAACM,OAAO,CAACG,EAAE,CAAC,IAAIT,OAAO,CAACM,OAAO,CAACG,EAAE,CAAC,CAACgB,MAAM,GAAG,CAAC,gBACvD9B,OAAA;QAAOiC,SAAS,EAAC,6CAA6C;QAAAC,QAAA,gBAC5DlC,OAAA;UAAAkC,QAAA,eACElC,OAAA;YAAAkC,QAAA,gBACElC,OAAA;cAAIiC,SAAS,EAAC,kBAAkB;cAAAC,QAAA,EAAC;YAAS;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC/CtC,OAAA;cAAIiC,SAAS,EAAC,kBAAkB;cAAAC,QAAA,EAAC;YAAK;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eACRtC,OAAA;UAAAkC,QAAA,EACG7B,OAAO,CAACM,OAAO,CAACG,EAAE,CAAC,CAACM,GAAG,CAAC,CAACK,SAAS,EAAEH,KAAK,kBACxCtB,OAAA;YAAAkC,QAAA,gBACElC,OAAA;cAAIiC,SAAS,EAAC,kBAAkB;cAAAC,QAAA,EAAET,SAAS,CAACC;YAAI;cAAAS,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACtDtC,OAAA;cAAIiC,SAAS,EAAC,kBAAkB;cAAAC,QAAA,EAAET,SAAS,CAACR;YAAK;cAAAkB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAAA,GAFhDhB,KAAK;YAAAa,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAGV,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,gBAERtC,OAAA;QAAGiC,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAC;MAAqB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CACrD;IAAA,GA5BI3B,OAAO,CAACG,EAAE;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OA6BZ,CACN,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAClC,EAAA,CAzFQH,aAAa;AAAAsC,EAAA,GAAbtC,aAAa;AA2FtB,eAAeA,aAAa;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}