{"ast":null,"code":"var _jsxFileName = \"/Users/subhashpatel/vote/voting-system-1/src/components/VoterPortal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ActiveSessions from './ActiveSessions';\nimport VotingResults from './VotingResults';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst VoterPortal = ({\n  contract,\n  account,\n  isRegistered,\n  setIsRegistered,\n  onLogout\n}) => {\n  _s();\n  const [activeTab, setActiveTab] = useState('vote');\n  const [activeSessions, setActiveSessions] = useState([]);\n  const [allSessions, setAllSessions] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [autoStarting, setAutoStarting] = useState(false);\n  useEffect(() => {\n    loadSessions();\n  }, [contract]);\n  const autoStartEligibleSessions = async allSessionsData => {\n    if (!contract || autoStarting) return allSessionsData;\n    try {\n      const now = new Date();\n      const sessionsToStart = allSessionsData.filter(session => {\n        // Session should auto-start if:\n        // 1. Current time >= start time\n        // 2. Current time <= end time  \n        // 3. Session is not active yet\n        return now >= session.startTime && now <= session.endTime && !session.isActive;\n      });\n      if (sessionsToStart.length > 0) {\n        console.log(`Auto-starting ${sessionsToStart.length} eligible sessions...`);\n        setAutoStarting(true);\n        for (const session of sessionsToStart) {\n          try {\n            console.log(`Auto-starting session: ${session.name}`);\n            const transaction = await contract.startSession(session.id);\n            await transaction.wait();\n            console.log(`Successfully auto-started session: ${session.name}`);\n\n            // Update the session in our local data\n            session.isActive = true;\n          } catch (error) {\n            console.error(`Failed to auto-start session ${session.name}:`, error);\n            // Continue with other sessions even if one fails\n          }\n        }\n        setAutoStarting(false);\n      }\n      return allSessionsData;\n    } catch (error) {\n      console.error('Error in auto-start process:', error);\n      setAutoStarting(false);\n      return allSessionsData;\n    }\n  };\n  const loadSessions = async () => {\n    try {\n      setLoading(true);\n      const now = new Date();\n\n      // Load all sessions first\n      const allSessionIds = await contract.getAllSessions();\n      let allSessionsData = [];\n      for (const sessionId of allSessionIds) {\n        const sessionDetails = await contract.getSession(sessionId);\n        const sessionStartTime = new Date(Number(sessionDetails.startTime) * 1000);\n        const sessionEndTime = new Date(Number(sessionDetails.endTime) * 1000);\n        const isActive = await contract.isSessionActive(sessionId);\n        allSessionsData.push({\n          id: sessionId.toString(),\n          name: sessionDetails.sessionName,\n          startTime: sessionStartTime,\n          endTime: sessionEndTime,\n          candidateCount: Number(sessionDetails.candidateCount),\n          totalVotes: Number(sessionDetails.totalVotes),\n          isActive\n        });\n      }\n\n      // Auto-start eligible sessions\n      allSessionsData = await autoStartEligibleSessions(allSessionsData);\n\n      // Now filter active sessions - only sessions that are truly active and within time range\n      const activeSessionsData = [];\n      for (const session of allSessionsData) {\n        // ✅ FIXED: Only include sessions that are active AND within valid time range\n        if (session.isActive && now >= session.startTime && now <= session.endTime) {\n          const hasVoted = await contract.hasVotedInSession(account, session.id);\n          activeSessionsData.push({\n            ...session,\n            hasVoted\n          });\n        }\n      }\n      setActiveSessions(activeSessionsData);\n\n      // Prepare all sessions for results - properly categorized\n      const resultSessionsData = allSessionsData.map(session => {\n        // ✅ FIXED: Proper session categorization\n        let sessionStatus = 'pending';\n        if (now >= session.startTime && now <= session.endTime && session.isActive) {\n          sessionStatus = 'active';\n        } else if (now > session.endTime || now > session.startTime && !session.isActive) {\n          sessionStatus = 'completed';\n        }\n        return {\n          ...session,\n          status: sessionStatus\n        };\n      });\n\n      // Sort by date (newest first) and filter for results view\n      const sortedSessions = resultSessionsData.filter(session => session.status === 'completed' || session.status === 'active' && session.totalVotes > 0).sort((a, b) => b.endTime - a.endTime).slice(0, 10);\n      setAllSessions(sortedSessions);\n    } catch (error) {\n      console.error('Error loading sessions:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleRegistration = async () => {\n    try {\n      setLoading(true);\n      const transaction = await contract.registerSelf();\n      await transaction.wait();\n      setIsRegistered(true);\n      alert('✅ Successfully registered to vote!');\n    } catch (error) {\n      console.error('Error registering:', error);\n      alert('❌ Registration failed: ' + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleVoteSuccess = () => {\n    loadSessions(); // Reload to update voting status\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"voter-portal\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"portal-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\uD83D\\uDDF3\\uFE0F Voter Portal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"account-badge\",\n            children: [\"\\uD83D\\uDCF1 \", account.slice(0, 6), \"...\", account.slice(-4)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"registration-status\",\n            children: isRegistered ? /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"status-badge registered\",\n              children: \"\\u2705 Registered\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"status-badge unregistered\",\n              children: \"\\u274C Not Registered\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onLogout,\n            className: \"btn btn-secondary btn-small\",\n            children: \"\\uD83D\\uDEAA Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"portal-nav\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setActiveTab('vote'),\n          className: `nav-btn ${activeTab === 'vote' ? 'active' : ''}`,\n          children: [\"\\uD83D\\uDDF3\\uFE0F Vote in Sessions\", activeSessions.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"nav-badge\",\n            children: activeSessions.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setActiveTab('results'),\n          className: `nav-btn ${activeTab === 'results' ? 'active' : ''}`,\n          children: \"\\uD83D\\uDCC8 View Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"portal-content\",\n      children: !isRegistered ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"registration-required\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"registration-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\uD83D\\uDCDD Registration Required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"You need to register as a voter before you can participate in voting sessions.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"registration-benefits\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"\\u2728 After registration, you can:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"\\uD83D\\uDDF3\\uFE0F Vote in all active sessions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"\\uD83D\\uDCCA View session results\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"\\uD83D\\uDCC8 Track your voting history\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"\\uD83C\\uDFC6 See winners of completed sessions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleRegistration,\n            disabled: loading || autoStarting,\n            className: \"btn btn-primary btn-large\",\n            children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"btn-spinner\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 21\n              }, this), \"Registering...\"]\n            }, void 0, true) : '📝 Register as Voter'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"registration-note\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\uD83D\\uDD12 Registration is free and secure on the blockchain\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 17\n            }, this), autoStarting && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"auto-start-note\",\n              children: \"\\u23F0 Sessions are automatically starting based on their scheduled time...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [activeTab === 'vote' && /*#__PURE__*/_jsxDEV(ActiveSessions, {\n          contract: contract,\n          account: account,\n          sessions: activeSessions,\n          loading: loading || autoStarting,\n          onVoteSuccess: handleVoteSuccess\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 15\n        }, this), activeTab === 'results' && /*#__PURE__*/_jsxDEV(VotingResults, {\n          contract: contract,\n          sessions: allSessions,\n          isVoterView: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n};\n_s(VoterPortal, \"8frll7uWlJw/M0InEiGly48lWwo=\");\n_c = VoterPortal;\nexport default VoterPortal;\nvar _c;\n$RefreshReg$(_c, \"VoterPortal\");","map":{"version":3,"names":["React","useState","useEffect","ActiveSessions","VotingResults","jsxDEV","_jsxDEV","Fragment","_Fragment","VoterPortal","contract","account","isRegistered","setIsRegistered","onLogout","_s","activeTab","setActiveTab","activeSessions","setActiveSessions","allSessions","setAllSessions","loading","setLoading","autoStarting","setAutoStarting","loadSessions","autoStartEligibleSessions","allSessionsData","now","Date","sessionsToStart","filter","session","startTime","endTime","isActive","length","console","log","name","transaction","startSession","id","wait","error","allSessionIds","getAllSessions","sessionId","sessionDetails","getSession","sessionStartTime","Number","sessionEndTime","isSessionActive","push","toString","sessionName","candidateCount","totalVotes","activeSessionsData","hasVoted","hasVotedInSession","resultSessionsData","map","sessionStatus","status","sortedSessions","sort","a","b","slice","handleRegistration","registerSelf","alert","message","handleVoteSuccess","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","sessions","onVoteSuccess","isVoterView","_c","$RefreshReg$"],"sources":["/Users/subhashpatel/vote/voting-system-1/src/components/VoterPortal.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ActiveSessions from './ActiveSessions';\nimport VotingResults from './VotingResults';\n\nconst VoterPortal = ({ contract, account, isRegistered, setIsRegistered, onLogout }) => {\n  const [activeTab, setActiveTab] = useState('vote');\n  const [activeSessions, setActiveSessions] = useState([]);\n  const [allSessions, setAllSessions] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [autoStarting, setAutoStarting] = useState(false);\n\n  useEffect(() => {\n    loadSessions();\n  }, [contract]);\n\n  const autoStartEligibleSessions = async (allSessionsData) => {\n    if (!contract || autoStarting) return allSessionsData;\n\n    try {\n      const now = new Date();\n      const sessionsToStart = allSessionsData.filter(session => {\n        // Session should auto-start if:\n        // 1. Current time >= start time\n        // 2. Current time <= end time  \n        // 3. Session is not active yet\n        return now >= session.startTime && \n               now <= session.endTime && \n               !session.isActive;\n      });\n\n      if (sessionsToStart.length > 0) {\n        console.log(`Auto-starting ${sessionsToStart.length} eligible sessions...`);\n        setAutoStarting(true);\n\n        for (const session of sessionsToStart) {\n          try {\n            console.log(`Auto-starting session: ${session.name}`);\n            const transaction = await contract.startSession(session.id);\n            await transaction.wait();\n            console.log(`Successfully auto-started session: ${session.name}`);\n            \n            // Update the session in our local data\n            session.isActive = true;\n          } catch (error) {\n            console.error(`Failed to auto-start session ${session.name}:`, error);\n            // Continue with other sessions even if one fails\n          }\n        }\n        setAutoStarting(false);\n      }\n\n      return allSessionsData;\n    } catch (error) {\n      console.error('Error in auto-start process:', error);\n      setAutoStarting(false);\n      return allSessionsData;\n    }\n  };\n\n  const loadSessions = async () => {\n    try {\n      setLoading(true);\n      const now = new Date();\n      \n      // Load all sessions first\n      const allSessionIds = await contract.getAllSessions();\n      let allSessionsData = [];\n\n      for (const sessionId of allSessionIds) {\n        const sessionDetails = await contract.getSession(sessionId);\n        const sessionStartTime = new Date(Number(sessionDetails.startTime) * 1000);\n        const sessionEndTime = new Date(Number(sessionDetails.endTime) * 1000);\n        const isActive = await contract.isSessionActive(sessionId);\n        \n        allSessionsData.push({\n          id: sessionId.toString(),\n          name: sessionDetails.sessionName,\n          startTime: sessionStartTime,\n          endTime: sessionEndTime,\n          candidateCount: Number(sessionDetails.candidateCount),\n          totalVotes: Number(sessionDetails.totalVotes),\n          isActive\n        });\n      }\n\n      // Auto-start eligible sessions\n      allSessionsData = await autoStartEligibleSessions(allSessionsData);\n\n      // Now filter active sessions - only sessions that are truly active and within time range\n      const activeSessionsData = [];\n      \n      for (const session of allSessionsData) {\n        // ✅ FIXED: Only include sessions that are active AND within valid time range\n        if (session.isActive && now >= session.startTime && now <= session.endTime) {\n          const hasVoted = await contract.hasVotedInSession(account, session.id);\n          \n          activeSessionsData.push({\n            ...session,\n            hasVoted\n          });\n        }\n      }\n\n      setActiveSessions(activeSessionsData);\n\n      // Prepare all sessions for results - properly categorized\n      const resultSessionsData = allSessionsData.map(session => {\n        // ✅ FIXED: Proper session categorization\n        let sessionStatus = 'pending';\n        if (now >= session.startTime && now <= session.endTime && session.isActive) {\n          sessionStatus = 'active';\n        } else if (now > session.endTime || (now > session.startTime && !session.isActive)) {\n          sessionStatus = 'completed';\n        }\n        \n        return {\n          ...session,\n          status: sessionStatus\n        };\n      });\n\n      // Sort by date (newest first) and filter for results view\n      const sortedSessions = resultSessionsData\n        .filter(session => session.status === 'completed' || (session.status === 'active' && session.totalVotes > 0))\n        .sort((a, b) => b.endTime - a.endTime)\n        .slice(0, 10);\n      \n      setAllSessions(sortedSessions);\n\n    } catch (error) {\n      console.error('Error loading sessions:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleRegistration = async () => {\n    try {\n      setLoading(true);\n      const transaction = await contract.registerSelf();\n      await transaction.wait();\n      setIsRegistered(true);\n      alert('✅ Successfully registered to vote!');\n    } catch (error) {\n      console.error('Error registering:', error);\n      alert('❌ Registration failed: ' + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleVoteSuccess = () => {\n    loadSessions(); // Reload to update voting status\n  };\n\n  return (\n    <div className=\"voter-portal\">\n      <header className=\"portal-header\">\n        <div className=\"header-content\">\n          <h1>🗳️ Voter Portal</h1>\n          <div className=\"header-info\">\n            <span className=\"account-badge\">\n              📱 {account.slice(0, 6)}...{account.slice(-4)}\n            </span>\n            <div className=\"registration-status\">\n              {isRegistered ? (\n                <span className=\"status-badge registered\">✅ Registered</span>\n              ) : (\n                <span className=\"status-badge unregistered\">❌ Not Registered</span>\n              )}\n            </div>\n            <button onClick={onLogout} className=\"btn btn-secondary btn-small\">\n              🚪 Logout\n            </button>\n          </div>\n        </div>\n        \n        <nav className=\"portal-nav\">\n          <button \n            onClick={() => setActiveTab('vote')}\n            className={`nav-btn ${activeTab === 'vote' ? 'active' : ''}`}\n          >\n            🗳️ Vote in Sessions\n            {activeSessions.length > 0 && (\n              <span className=\"nav-badge\">{activeSessions.length}</span>\n            )}\n          </button>\n          <button \n            onClick={() => setActiveTab('results')}\n            className={`nav-btn ${activeTab === 'results' ? 'active' : ''}`}\n          >\n            📈 View Results\n          </button>\n        </nav>\n      </header>\n\n      <main className=\"portal-content\">\n        {!isRegistered ? (\n          <div className=\"registration-required\">\n            <div className=\"registration-card\">\n              <h2>📝 Registration Required</h2>\n              <p>You need to register as a voter before you can participate in voting sessions.</p>\n              \n              <div className=\"registration-benefits\">\n                <h3>✨ After registration, you can:</h3>\n                <ul>\n                  <li>🗳️ Vote in all active sessions</li>\n                  <li>📊 View session results</li>\n                  <li>📈 Track your voting history</li>\n                  <li>🏆 See winners of completed sessions</li>\n                </ul>\n              </div>\n              \n              <button \n                onClick={handleRegistration}\n                disabled={loading || autoStarting}\n                className=\"btn btn-primary btn-large\"\n              >\n                {loading ? (\n                  <>\n                    <div className=\"btn-spinner\"></div>\n                    Registering...\n                  </>\n                ) : (\n                  '📝 Register as Voter'\n                )}\n              </button>\n              \n              <div className=\"registration-note\">\n                <p>🔒 Registration is free and secure on the blockchain</p>\n                {autoStarting && (\n                  <p className=\"auto-start-note\">\n                    ⏰ Sessions are automatically starting based on their scheduled time...\n                  </p>\n                )}\n              </div>\n            </div>\n          </div>\n        ) : (\n          <>\n            {activeTab === 'vote' && (\n              <ActiveSessions \n                contract={contract}\n                account={account}\n                sessions={activeSessions}\n                loading={loading || autoStarting}\n                onVoteSuccess={handleVoteSuccess}\n              />\n            )}\n            \n            {activeTab === 'results' && (\n              <VotingResults \n                contract={contract}\n                sessions={allSessions}\n                isVoterView={true}\n              />\n            )}\n          </>\n        )}\n      </main>\n    </div>\n  );\n};\n\nexport default VoterPortal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}